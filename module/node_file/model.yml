tables:
  dir:
    fields:
      id:
        type: integer
        label: Id
      path:
        type: plaintext
        label: Path
        maxlength: 32
    keys:
      primary:
        fields: [id]
        primary: 1
        autoIncrement: 1
    relations:
      files:
        table: file
        clauses: {id: dir_id}
        type: 1-N
  file:
    fields:
      id:
        type: integer
        label: Id
      dir_id:
        type: integer
        label: Dir Id
      name:
        type: plaintext
        label: File name
        maxlength: 32
        regexp: /^[a-zA-Z0-9._-]+$/
      size:
        type: integer
        label: Bytes
    keys:
      primary:
        fields: [id]
        primary: 1
        autoIncrement: 1
    relations:
      dir:
        table: dir
        clauses: {dir_id: id}
        type: N-1
      node:
        table: node_file
        clauses: {id: file_id}
        type: 1-1
    virtuals:
      path:
        dependencies: [dir.path, name]
        label: File path
        handler: |
          function($file) {
            return $file->dir->path . $file->name;
          }
      extension:
        dependencies: [name]
        label: File extension
        handler: |
          function($file) {
            return \system\File::getExtension($file->name);
          }
      last_update:
        dependencies: [path]
        label: Last update
        handler: |
          function($file) {
            return \filetime($file->path);
          }
  node:
    relations:
      # FILES
      files:
        table: node_file
        type: 1-N
        clauses: {id: node_id}
        onDelete: CASCADE
        selectKey: file_id
    virtuals:
      valid_file_keys:
        dependencies: [type]
        handler: [\module\node_file\NodeEntity, getValidFileKeys]
  node_file:
    fields:
      node_id:
        type: integer
      node_index:
        type: plaintext
        maxlength: 32
      sort_index:
        type: integer
      file_id:
        type: integer
      virtual_name:
        type: plaintext
        maxlength: 32
      preview_file_path:
        type: plaintext
        maxlength: 32
      download_mode:
        type: integer
        options:
#          0: Nobody
#          1: Superuser
          2: Node owner only
          3: Node admins
          4: Registered
          5: Anyone
    keys:
      primary:
        fields: [file_id]
        primary: 1
        autoIncrement: 1
      node_key:
        fields: [node_id, node_index, virtual_name]
    relations:
      node:
        type: N-1
        table: node
        clauses: {node_id: id}
      file:
        type: 1-1
        table: file
        clauses: {file_id: id}
        onDelete: CASCADE
    virtuals:
      url:
        label: URL
        dependencies: [file_id, file.extension, node_id, node_index, virtual_name]
        handler: [\module\node_file\NodeFileEntity, getUrl]
      edit_url:
        label: Edit URL
        dependencies: [file_id]
        handler: [\module\node_file\NodeFileEntity, getEditUrl]
      delete_url:
        label: Delete URL
        dependencies: [file_id]
        handler: [\module\node_file\NodeFileEntity, getDeleteUrl]
      download_path:
        handler: |
          function($recordset) {
            return $recordset->virtual_name;
          }
      images:
        label: Images
        dependencies: [file_id, file.extension, node_id, node_index, virtual_name]
        handler: [\module\node_file\NodeFileEntity, getImages]