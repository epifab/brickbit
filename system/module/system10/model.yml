tables:
  session:
    fields:
      id:
        label: Id
        type: integer
      user_id:
        label: User id
        type: integer
      session_id:
        label: Session id
        type: string
        size: 32
      create_time:
        label: Created on
        type: datetime
      update_time:
        label: Last access
        type: datetime
      expire_time:
        label: Expire date
        type: datetime
      data:
        label: Session data
        type: blob
    keys:
      primary:
        fields: [id]
        autoIncrement: 1
        primary: 1
      user_session:
        fields: [user_id, session_id]
    relations:
      user:
        table: user
        type: N-1
        clauses: {user_id: id}
  module:
    fields:
      id:
        label: Id
        type: integer
      name:
        label: Name
        type: string
        size: 32
      class:
        label: Class
        type: string
        size: 32
      weight:
        label: Weight
        type: integer
      enabled:
        type: boolean
        label: Enabled
      info:
        label: Module info
        type: blob
    keys:
      primary:
        fields: [id]
        autoIncrement: 1
        primary: 1
      name_key:
        fields: [name]
    relations:
      permissions:
        table: permission
        type: 1-N
        clauses: {id: module_id}
        onDelete: CASCADE
  permission:
    fields:
      id:
        type: integer
        label: Id
      name:
        type: string
        size: 32
        label: Name
      module_id:
        type: integer
        label: Module id
    keys:
      primary:
        fields: [id]
        primary: 1
    relations:
      roles:
        table: role_permission
        type: 1-N
        clauses: {id: permission_id}
      module:
        table: module
        type: N-1
        clauses: {module_id: id}
  user:
    fields:
      id:
        type: integer
      email:
        type: string
        label: Email
        size: 128
      password:
        type: string
        label: Password
        size: 32
      full_name:
        type: string
        label: Full name
        size: 128
      last_login:
        type: datetime
        label: Last login
      ins_date_time:
        type: datetime
        label: Registration date
      last_upd_date_time:
        type: datetime
        label: Last update
    keys:
      primary:
        fields: [id]
        autoIncrement: 1
      email_key:
        fields: [email]
    relations:
      roles:
        table: user_role
        type: 1-N
        clauses: {id: user_id}
        onDelete: CASCADE
  role:
    fields:
      id:
        type: integer
        label: Id
      name:
        type: string
        size: 128
        label: Name
    keys:
      primary:
        fields: [id]
        autoIncrement: 1
    relations:
      users:
        table: user_role
        type: 1-N
        clauses: {id: user_id}  
        onDelete: CASCADE
      permissions:
        table: role_permission
        type: 1-N
        clauses: {id: role_id}
        onDelete: CASCADE
  user_role:
    fields:
      user_id:
        type: integer
        label: User id
      role_id:
        type: integer
        label: Role id
    keys:
      primary:
        fields: [user_id, role_id]
        primary: 1
    relations:
      user:
        table: user
        type: N-1
        clauses: {user_id: id}
      role:
        table: role
        type: N-1
        clauses: {role_id: id}
  role_permission:
    fields:
      role_id:
        label: Role id
        type: integer
      permission_id:
        label: Permission id
        type: integer
    keys:
      primary:
        fields: [role_id, permission_id]
    relations:
      permission:
        table: permission
        type: N-1
        clauses: {permission_id: id}
      role:
        table: role
        type: N-1
        clauses: {role_id: id}
  log:
    fields:
      id:
        type: integer
        label: Id
      url:
        type: string
        size: 1024
        label: URL
      level:
        type: integer
        label: Level
      code:
        type: string
        size: 64
        label: Code
      body:
        type: string
        label: Body
      trace:
        type: string
        label: Trace
      date_time_request:
        type: datetime
        label: Request date
      user_id:
        type: integer
        label: User id
      ip_address:
        type: string
        size: 16
        label: IP address
    keys:
      primary:
        fields: [id]
        autoIncrement: 1
    relations:
      user:
        type: N-1
        table: user
        clauses: {user_id: id}
    virtuals:
       level_class:
          type: string
          dependencies: level
          handler: |
            function($log) {
               switch ($log->level) {
                  case \system\LOG_NOTICE:
                     return 'success';
                     break;
                  case \system\LOG_WARNING:
                     return 'warning';
                     break;
                  case \system\LOG_ERROR:
                     return 'danger';
                     break;
                  case \system\LOG_DEBUG:
                     return 'info';
                     break;
               }
            }